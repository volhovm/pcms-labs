#+LANGUAGE: ru
#+LaTeX_CLASS_OPTIONS: [a4paper, unicode]
#+OPTIONS: toc:nil
#+LaTeX_HEADER: \usepackage[a4paper, left=3cm,right=3cm,top=2cm,bottom=2cm]{geometry}
#+LaTeX_HEADER: \usepackage[russian]{babel}             % Russian translations
#+LaTeX_HEADER: \usepackage{amssymb,amsmath,amsthm}     % Mathematic symbols, theorems, etc.
#+TITLE: Отчет по лабораторной работе #2
#+AUTHOR: Михаил Волхов (M3338)

* Условия
  Арифметические выражения в постфиксной записи с операциями сложения,
  вычитания, умножения. Операнды -- целые числа.
* Разработка грамматики
  В первую очередь заметим, что арифметические выражения в постфиксной
  нотации не имеют встроенных в грамматику приоритетов операций --
  любое выражение может быть разобрано однозначно.

  Поэтому изначальная грамматика будет выглядить так:

  #+OPTIONS: tex:t
  \begin{align*}
  A &\rightarrow A A * \\
  A &\rightarrow A A + \\
  A &\rightarrow A A - \\
  A &\rightarrow n
  \end{align*}

  В нотации EBNF:
  \[A \rightarrow A A * | A A + | A A - | n\]

  Избавимся сначала от левой рекурсии:
  \begin{align*}
  A &\rightarrow n B | n \\
  B &\rightarrow A * | A + | A - | A * B | A + B | A - B
  \end{align*}

  Есть правое ветвление, устраним его:
  \begin{align*}
  A &\rightarrow n B | n \\
  B &\rightarrow A C \\
  C &\rightarrow * | + | - | * B | + B | - B
  \end{align*}

  Все еще есть правое ветвление, устраним:
  \begin{align*}
  A &\rightarrow n B | n \\
  B &\rightarrow A C \\
  C &\rightarrow * D | + D | - D \\
  D &\rightarrow \varepsilon | B
  \end{align*}

  И в первом правиле:
  \begin{align*}
  A &\rightarrow n D \\
  B &\rightarrow A C \\
  C &\rightarrow * D | + D | - D \\
  D &\rightarrow \varepsilon | B
  \end{align*}

* Построение лексического анализатора
  Лексический анализатор находится в модуле
  ~Recparser.Lexer~. Терминалы в нашей грамматике: $n, +, -,
  *$. Соотвествуют дататайпу ~Token~ в представленном модуле.
* Построение синтаксического анализатора
  Посчитаем ~FIRST~ и ~FOLLOW~:
  | T | FIRST          | FOLLOW     |
  |---+----------------+------------|
  | A | n              | $, *, +, - |
  | B | n              | $, *, +, - |
  | C | *, +, -        | $, *, +, - |
  | D | \varepsilon, n | $, *, +, - |
  |---+----------------+------------|

  Код синтаксического анализатора находится в модуле
  ~Recparser.Parser~. Дататайпы ~PA, PB, PC, PD~ в точности
  соответствуют нетерминалам грамматики.
* Тестирование
  Тестирование проводится с помощью ~hspec~, тесты делятся на ручные и
  автоматически сгенерированные (~quickcheck~).

  Автоматически сгенерированные тесты:
  * Лексер принимает случайные правильные строки токенов (длина 200).
  * Лексер отвергает случайные правильные строки токенов вперемешку с
    мусором (символы, не встречающиеся в грамматике, тут и далее).
  * Парсер корректно работает на случайном дататайпе грамматики (x100,
    разная глубина).
  * Парсер падает, получив на вход случайный дататайп грамматики (те
    же параметры) + мусор.

  Ручные тесты:
  | Правило           | Вердикт      | ОБъяснение                             |
  |-------------------+--------------+----------------------------------------|
  | 1                 | Принимает    | Правило A                              |
  | -1                | Принимает    | То же самое                            |
  | 1 2 +             | Принимает    | Правило A + D + B                      |
  | -1 -2 +           | Принимает    | То же самое                            |
  | 1 2 + 3 4 * -     | Принимает    | Более сложный тест на B                |
  | 1 2 + 3 4 * 5 - * | Принимает    | Два C (арифметических операции) подряд |
  | 1 2 + 5 3 4 * - * | Принимает    | То же, но в другом порядке             |
  |-------------------+--------------+----------------------------------------|
  | a                 | Не принимает | Незнакомый символ для лексера          |
  | *                 | Не принимает | Правило A                              |
  | 1 +               | Не принимает | A + суффикс                            |
  | 1 2 + *           | Не принимает | A + B + D + суффикс                    |
  | 1 2 + 5           | Не принимает | То же, другой суффикс (A вместо C)     |
  |-------------------+--------------+----------------------------------------|
